<div class="clearfix">
  <div class="chat">

    <div class="chat-history">
      <div class="chat-message clearfix">
        <textarea name="message-to-send" id="message-to-send" placeholder="Send a message to your class." rows="3"></textarea>

        <i class="fa fa-file-o"></i> &nbsp;&nbsp;&nbsp;
        <i class="fa fa-file-image-o"></i>

        <button class=" button grey mt-2">Send</button>

      </div> <!-- end chat-message -->

      <ul class="no-list-style-type py-2 px-1">
        <li class="clearfix">
          <div class="message-data align-right uk-position-relative">
            <span class="message-data-time" >10:10 AM</span> &nbsp; &nbsp;
            <span class="message-data-name mr-3" >Olia</span> <i class="status-indicator right me"></i>

          </div>
          <div class="message other-message float-right">
            Hi Vincent, how are you? How is the project coming along?
          </div>
        </li>

        <li>
          <div class="message-data uk-position-relative">
            <i class="status-indicator left online"></i>
            <span class="message-data-name ml-3"> Vincent</span>
            <span class="message-data-time">10:12 AM</span>
          </div>
          <div class="message my-message">
            Are we meeting today? Project has been already finished and I have results to show you.
          </div>
        </li>

      </ul>

    </div> <!-- end chat-history -->

  </div> <!-- end chat -->

</div> <!-- end container -->

<script id="message-template" type="text/x-handlebars-template">
<li class="clearfix">
  <div class="message-data align-right">
    <span class="message-data-time" >{{time}}</span> &nbsp; &nbsp;
    <span class="message-data-name" >Olia</span> <i class="status-indicator me"></i>
  </div>
  <div class="message other-message float-right">
    {{messageOutput}}
  </div>
</li>
</script>

<script id="message-response-template" type="text/x-handlebars-template">
<li>
  <div class="message-data uk-position-relative">
    <span class="message-data-name"><i class="status-indicator online"></i> Vincent</span>
    <span class="message-data-time">{{time}}</span>
  </div>
  <div class="message my-message">
    {{response}}
  </div>
</li>
</script>


<%= content_for(:extra_js) do %>
<script type="text/javascript">
  (function(){

  var chat = {
    messageToSend: '',
    messageResponses: [
      'Why did the web developer leave the restaurant? Because of the table layout.',
      'How do you comfort a JavaScript bug? You console it.',
      'An SQL query enters a bar, approaches two tables and asks: "May I join you?"',
      'What is the most used language in programming? Profanity.',
      'What is the object-oriented way to become wealthy? Inheritance.',
      'An SEO expert walks into a bar, bars, pub, tavern, public house, Irish pub, drinks, beer, alcohol'
    ],
    init: function() {
      this.cacheDOM();
      this.bindEvents();
      this.render();
    },
    cacheDOM: function() {
      this.$chatHistory = $('.chat-history');
      this.$button = $('button');
      this.$textarea = $('#message-to-send');
      this.$chatHistoryList =  this.$chatHistory.find('ul');
    },
    bindEvents: function() {
      this.$button.on('click', this.addMessage.bind(this));
      this.$textarea.on('keyup', this.addMessageEnter.bind(this));
    },
    render: function() {
      if (this.messageToSend.trim() !== '') {
        var template = Handlebars.compile( $("#message-template").html());
        var context = {
          messageOutput: this.messageToSend,
          time: this.getCurrentTime()
        };

        this.$chatHistoryList.append(template(context));
        this.$textarea.val('');

        // responses
        var templateResponse = Handlebars.compile( $("#message-response-template").html());
        var contextResponse = {
          response: this.getRandomItem(this.messageResponses),
          time: this.getCurrentTime()
        };

        setTimeout(function() {
          this.$chatHistoryList.append(templateResponse(contextResponse));
        }.bind(this), 1500);

      }

    },

    addMessage: function() {
      this.messageToSend = this.$textarea.val()
      this.render();
    },
    addMessageEnter: function(event) {
        // enter was pressed
        if (event.keyCode === 13) {
          this.addMessage();
        }
    },
    getCurrentTime: function() {
      return new Date().toLocaleTimeString().
              replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
    },
    getRandomItem: function(arr) {
      return arr[Math.floor(Math.random()*arr.length)];
    }

  };

  chat.init();

  })();
</script>

<% end %>
